{"version":3,"sources":["components/Navbar.js","components/Home.js","components/Add.js","components/Show.js","components/Create.js","components/List.js","components/Content.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","right","to","Home","className","Add","props","useState","quizContent","setquizContent","count","setcount","console","log","onSubmit","e","preventDefault","submit","name","value","onChange","target","autoFocus","type","onClick","step","withRouter","text","boolean","btn","setbtn","edit","backgroundColor","border","list","quiz","map","element","key","id","style","editQuestion","editAnswer","length","txt","content","setquiz","setStep","newContent","Math","random","newQuiz","history","push","List","quizList","delete","textAlign","Content","showHide","setShowHide","setCount","point","setPoint","display","App","Quiz","setQuiz","QuizContent","setQuizContent","createQuiz","filter","deleteQuiz","newQuizList","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a1479a8a.chunk.js","sourcesContent":["import React from 'react';\nimport {slide as Menu} from 'react-burger-menu';\nimport {Link} from 'react-router-dom';\n\nfunction Navbar() {\n    return(\n        <Menu right>\n            <Link to=\"/quiz-react/create\">Create Quiz</Link>\n            <Link to=\"/quiz-react/list\">Quiz list</Link>\n        </Menu>\n    )\n}\n\nexport default Navbar;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\n\nfunction Home() {\n    return(\n        <div className=\"create-button\"><Link to=\"/quiz-react/create\">Create Quiz</Link>\n        </div>\n    )\n}\n\nexport default Home;","import React, {useState} from 'react';\nimport TextareaAutosize from 'react-autosize-textarea';\n\nfunction Add(props) {\n    const [quizContent, setquizContent] = useState([\"\", \"\"])\n    const [count, setcount] = useState(0)\n\n    console.log(quizContent)\n\n    const countNumber = (e) => {\n        setcount(count + 1)\n    }\n    const contentSubmit = (e) => {\n        e.preventDefault()\n        props.submit(quizContent)\n        console.log(quizContent)\n        setquizContent([\"\", \"\"])\n    }\n\n    return (\n    <form className=\"quiz\" onSubmit={contentSubmit}>\n        <div className=\"title\">{props.name} [{count}]</div>\n            <div className=\"under-title\">Question</div>\n            <TextareaAutosize value={quizContent[0]} onChange={(e) => setquizContent([e.target.value, quizContent[1]])} autoFocus />\n\n            <div className=\"under-title\">Answer</div>\n            <TextareaAutosize value={quizContent[1]} onChange={(e) => setquizContent([quizContent[0], e.target.value])} />\n\n            <div className=\"btn\">\n                <button type=\"submit\" onClick={countNumber}>Add</button>\n                <button type=\"button\" onClick={props.step}>Next</button>\n            </div>        \n    </form>    \n    )\n    \n}\n\nexport default Add;","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport TextareaAutosize from 'react-autosize-textarea/lib';\n\nfunction Show(props) {\n    const [btn, setbtn] = useState({text: \"Edit\", boolean: false})\n\n    const edit = {\n        backgroundColor: \"#fff\",\n        border: \"solid 2px #58DFC6\"\n    }\n    const btnHandler = (txt) => {\n        txt === \"Edit\" ? setbtn({text: \"Save\", boolean: true}) : setbtn({text: \"Edit\", boolean: false})\n    }\n    \n    const list = props.quiz.map(element => \n        <div key={element.id} className=\"show\">\n            <div className=\"under-title\">Question</div>\n            <TextareaAutosize style={btn.boolean ? edit : null} value={element[0]} onChange={(e) => props.editQuestion(e.target.value, element.id)} />\n\n            <div className=\"under-title\">Answer</div>\n            <TextareaAutosize style={btn.boolean ? edit : null} value={element[1]} onChange={(e) => props.editAnswer(e.target.value, element.id)} />\n        </div>\n        )\n        console.log(list)\n\n    return (\n        <div className=\"quiz\">\n            <div className=\"title\">{props.name} [{props.quiz.length}]</div>\n            <div>{list}</div>\n            <div className=\"btn\">\n            <button type=\"button\" onClick={() => btnHandler(btn.text)}>{btn.text}</button>\n            <button type=\"button\" onClick={props.submit}>Finish</button>\n            </div>     \n        </div>   \n    )\n    \n}\n\nexport default withRouter(Show);","import React, {useState} from 'react';\nimport Add from './Add';\nimport Show from './Show';\nimport { withRouter } from 'react-router-dom';\n\nfunction Create(props) {\n    const [quiz, setquiz] = useState({name: \"\", content: []})\n    const [step, setStep] = useState(1)\n\n    const nextStep = (e) => {\n        e.preventDefault()\n        setquiz({name: quiz.name, content: []})\n        setStep(2)\n    }\n    console.log(quiz)\n\n    const updateQuiz = (newContent) => {\n        newContent.id = Math.random()\n        console.log(newContent)\n        const newQuiz = {name: quiz.name, content: [...quiz.content, newContent]}\n        setquiz(newQuiz)\n        console.log(newQuiz)\n    }\n\n    const editQ = (content, id) => {\n        console.log(content)\n        const newQuiz = [...quiz.content].map(element => {\n            if(element.id === id) {\n                element[0] = content\n            }\n        return element\n        })\n        console.log(newQuiz)\n        setquiz({name: quiz.name, content: newQuiz})\n    }\n    console.log(quiz)\n\n    const editA = (content, id) => {\n        console.log(content)\n        const newQuiz = [...quiz.content].map(element => {\n            if(element.id === id) {\n                element[1] = content\n            }\n        return element\n        })\n        console.log(newQuiz)\n        setquiz({name: quiz.name, content: newQuiz})\n    }\n    console.log(quiz)\n\n    \n    const submitQuiz = () => {\n        props.submit(quiz)\n        props.history.push(\"/quiz-react/list\")\n    }\n\n    switch(step) {\n        case 1:\n            return (\n                <div className=\"quiz\" >\n                <div className=\"title\">Quiz name</div>\n                <input type=\"text\" value={quiz.name} onChange={(e) => setquiz({name: e.target.value, content: []})} autoFocus/>\n                <button type=\"button\" onClick={nextStep}>Next</button>\n                </div>\n            );\n        case 2: \n            return(     \n                <Add name={quiz.name} submit={updateQuiz} step={() => setStep(3)} />\n            );\n        case 3: \n            return( \n                <Show name={quiz.name} quiz={quiz.content} submit={submitQuiz} editQuestion={editQ} editAnswer={editA} />\n            );\n        default: (console.log(\"This is build by switch statement\"))\n    }\n\n}\n\nexport default withRouter(Create);","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nfunction List(props) {\n    console.log(props.list)\n\n    const quizList = props.list.map(element => \n        <div key={element.id}>\n        <div className=\"list-name\">{element.name}</div>\n        <div className=\"list-button\">\n        <button type=\"button\" onClick={() => props.quiz(element.id)}><Link to=\"/quiz-react/list/quiz\">Start</Link></button>\n        <button type=\"button\" onClick={() => props.delete(element.id)}>Delete</button>\n        </div>\n        </div>\n     )\n         console.log(quizList)\n     return (\n         quizList.length === 0 ?  <h3 className=\"quiz\" style={{textAlign: \"center\"}}>Empty List</h3> : <div className=\"quiz\">{quizList}</div>\n     )\n}\n\nexport default List;","import React, {useState} from 'react';\n\nfunction Content(props) {\n    const [showHide, setShowHide] = useState(false)\n    const [step, setStep] = useState(1)\n    const [count, setCount] = useState(0)\n    const [point, setPoint] = useState(0)\n    console.log(props.content.length)\n\n    const winStep = () => {\n        if (count < props.content.length - 1) {\n            setCount(count + 1)\n            setPoint(point + 1)\n            setShowHide(!showHide)\n        }\n        else {\n            setPoint(point + 1)\n            setStep(2)}\n    }\n\n    const loseStep = () => {\n        if (count < props.content.length - 1) {\n            setCount(count + 1)\n            setPoint(point + 0)\n            setShowHide(!showHide)\n        }\n        else {\n            setPoint(point + 0)\n            setStep(2)}\n    }\n\n    const hideButton = {\n        display: \"none\"\n    }\n\n    const showButton = {\n        display: \"block\"\n    }\n    switch(step) {\n    case 1:\n        return (\n            <div className=\"quiz\">\n            <div className=\"title\">{props.name} [{count} of {props.content.length}]</div>\n                <div className=\"under-title\">Point: {point}</div>\n\n                <div className=\"q-a\" key={props.content[count].id}>\n                    <div>Question</div>\n                    <div className=\"box\">{props.content[count][0]}</div>\n                </div>\n\n                <div className=\"btn\">\n                <button style={showHide ? hideButton : null} type=\"button\" onClick={() => setShowHide(!showHide)}>Answer</button>\n                </div>\n\n                <div className=\"q-a\" style={showHide ? showButton : {display: \"none\"}}>\n                    <div>Answer</div>\n                    <div className=\"box\">{props.content[count][1]}</div>\n                </div>\n\n                <div className=\"btn\">              \n                    <button type=\"button\" onClick={winStep}>O</button>\n                    <button type=\"button\" onClick={loseStep}>X</button>\n                </div>\n            </div>\n            )\n\n    case 2:\n        return(\n            <h3 className=\"quiz\" style={{textAlign: \"center\"}}>You won {point} points!</h3>\n        )\n    \n    default: (console.log(\"This is build by switch statement\"))\n    } \n\n}\n\nexport default Content;","import React, { useState } from 'react';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport Create from './components/Create';\nimport List from './components/List';\nimport Content from './components/Content';\n\n\nfunction App() {\n  const [Quiz, setQuiz] =  useState([])\n  const [QuizContent, setQuizContent] = useState()\n\n  const quizList = (createQuiz) => {\n    createQuiz.id = Math.random()\n    const newQuiz = [...Quiz, createQuiz]\n    setQuiz(newQuiz)\n  }\n\n  const quizContent = (id) => {\n    setQuizContent()\n    const content = [...Quiz].filter(element =>\n      element.id === id\n      )\n      console.log(content)\n    setQuizContent(content[0])\n  }\n  console.log(QuizContent)\n  console.log(Quiz)\n\n  const deleteQuiz = (id) => {\n    const newQuizList = Quiz.filter(element => \n      element.id !== id\n      )\n      setQuiz(newQuizList)\n  } \n\n  return (\n    <BrowserRouter>\n      <Navbar />\n      <Route exact path=\"/quiz-react\" component={Home} />\n      <Route exact path=\"/quiz-react/create\" component={() => <Create submit={quizList} />} />\n      <Route exact path=\"/quiz-react/list\" component={() => <List list={Quiz} quiz={quizContent} delete={deleteQuiz} />} />\n      <Route exact path=\"/quiz-react/list/quiz\" component={() => <Content name={QuizContent.name} content={QuizContent.content} />} />\n    </BrowserRouter>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}