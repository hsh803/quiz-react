{"version":3,"sources":["components/Navbar.js","components/Home.js","components/Add.js","components/Show.js","components/Edit.js","components/Create.js","components/List.js","components/Content.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","right","to","Home","className","Add","props","useState","quizContent","setquizContent","count","setcount","console","log","onSubmit","e","preventDefault","submit","name","value","onChange","target","autoFocus","type","onClick","step","withRouter","text","boolean","btn","setbtn","edit","backgroundColor","border","list","quiz","map","element","key","id","style","editQuestion","editAnswer","length","txt","Edit","editContent","defaultValue","editSubmit","content","setquiz","setStep","newContent","Math","random","newQuiz","history","push","List","quizList","delete","Content","showHide","setShowHide","setCount","point","setPoint","display","textAlign","App","Quiz","setQuiz","QuizContent","setQuizContent","createQuiz","filter","deleteQuiz","newQuizList","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.bb03298a.chunk.js","sourcesContent":["import React from 'react';\nimport {slide as Menu} from 'react-burger-menu';\nimport {Link} from 'react-router-dom';\n\nfunction Navbar() {\n    return(\n        <Menu right>\n            <Link to=\"/create\">Create Quiz</Link>\n            <Link to=\"/list\">Quiz list</Link>\n        </Menu>\n    )\n}\n\n// burger menu\n// https://codesandbox.io/s/nmy6x9wrj?file=/src/styles.css\n// https://codepen.io/Lakston/pen/ALvgKB\n// https://negomi.github.io/react-burger-menu/\n// https://github.com/negomi/react-burger-menu\nexport default Navbar;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\n\nfunction Home() {\n    return(\n        <div className=\"create-button\"><Link to=\"/create\">Create Quiz</Link>\n        </div>\n    )\n}\n\n\nexport default Home;","import React, {useState} from 'react';\nimport TextareaAutosize from 'react-autosize-textarea';\n\nfunction Add(props) {\n    const [quizContent, setquizContent] = useState([\"\", \"\"])\n    const [count, setcount] = useState(0)\n\n    console.log(quizContent)\n\n    const countNumber = (e) => {\n        setcount(count + 1)\n    }\n    const contentSubmit = (e) => {\n        e.preventDefault()\n        props.submit(quizContent)\n        console.log(quizContent)\n        setquizContent([\"\", \"\"])\n    }\n\n    return (\n    <form className=\"quiz\" onSubmit={contentSubmit}>\n        <div className=\"title\">Quiz: {props.name}</div>\n        <div className=\"title\">Number of the quiz: {count}</div>\n        <div className=\"under-title\">Question:</div>\n        <TextareaAutosize value={quizContent[0]} onChange={(e) => setquizContent([e.target.value, quizContent[1]])} autoFocus />\n        <div className=\"under-title\">Answer:</div>\n        <TextareaAutosize value={quizContent[1]} onChange={(e) => setquizContent([quizContent[0], e.target.value])} />\n        <div>\n        <button type=\"submit\" onClick={countNumber}>Add</button>\n        <button type=\"button\" onClick={props.step}>Next</button>\n        </div>        \n    </form>    \n    )\n    \n}\n\nexport default Add;","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport TextareaAutosize from 'react-autosize-textarea/lib';\n\nfunction Show(props) {\n    const [btn, setbtn] = useState({text: \"Edit\", boolean: false})\n\n    const edit = {\n        backgroundColor: \"#fff\",\n        border: \"solid 2px #58DFC6\"\n    }\n    const btnHandler = (txt) => {\n        txt === \"Edit\" ? setbtn({text: \"Save\", boolean: true}) : setbtn({text: \"Edit\", boolean: false})\n    }\n    \n    const list = props.quiz.map(element => \n        <form key={element.id} className=\"list\">\n            <div className=\"under-title\">Question:</div>\n            <TextareaAutosize style={btn.boolean ? edit : null} value={element[0]} onChange={(e) => props.editQuestion(e.target.value, element.id)} />\n            <div className=\"under-title\">Answer:</div>\n            <TextareaAutosize style={btn.boolean ? edit : null} value={element[1]} onChange={(e) => props.editAnswer(e.target.value, element.id)} />\n        </form>\n        )\n        console.log(list)\n\n    return (\n        <div className=\"quiz\">\n            <div className=\"title\">Quiz: {props.name}</div>\n            <div className=\"title\">Number of the quiz: {props.quiz.length}</div>\n            <div>{list}</div>\n            <button type=\"button\" onClick={() => btnHandler(btn.text)}>{btn.text}</button>\n            <button type=\"button\" onClick={props.submit}>Finish</button>        \n        </div>   \n    )\n    \n}\n\nexport default withRouter(Show);","import React, {useState} from 'react';\nimport TextareaAutosize from 'react-autosize-textarea';\n//https://www.youtube.com/watch?v=N8kYlimhuLw\n\nfunction Edit(props) {\n    const [quizContent, setquizContent] = useState([\"\", \"\"])\n\n    const editContent = props.quiz.map(element => \n        <div key={element.id} className=\"list\">\n            <div>Q:</div>\n            <TextareaAutosize defaultValue={`${element[0]}`} onChange={(e) => setquizContent([e.target.value, \"\"])} />\n            <div>A:</div>\n            <TextareaAutosize defaultValue={`${element[1]}`} onChange={(e) => setquizContent([quizContent[0], e.target.value])} />\n        </div>\n        )\n        console.log(quizContent)\n    const editContentSubmit = () => {\n        props.editSubmit(quizContent)\n        props.step()\n    }\n\n    return (\n        <div className=\"quiz\">\n            <div className=\"title\">Quiz: {props.name}</div>\n            <form onSubmit={editContentSubmit}>\n            {editContent}\n            <button type=\"submit\">Save</button>\n            </form>\n        </div>\n        )\n    \n}\n\nexport default Edit;","import React, {useState} from 'react';\nimport Add from './Add';\nimport Show from './Show';\nimport Edit from './Edit';\nimport { withRouter } from 'react-router-dom';\n\nfunction Create(props) {\n    const [quiz, setquiz] = useState({name: \"\", content: []})\n    const [step, setStep] = useState(1)\n    // const [editquiz, seteditquiz] = useState([])\n\n    const nextStep = (e) => {\n        e.preventDefault()\n        setquiz({name: quiz.name, content: []})\n        setStep(2)\n    }\n    console.log(quiz)\n\n    const updateQuiz = (newContent) => {\n        newContent.id = Math.random()\n        console.log(newContent)\n        const newQuiz = {name: quiz.name, content: [...quiz.content, newContent]}\n        setquiz(newQuiz)\n        console.log(newQuiz)\n    }\n\n    const editQ = (content, id) => {\n        // let i;\n        console.log(content)\n        const newQuiz = [...quiz.content].map(element => {\n            // for (i=0; i < element.length; i++){\n            if(element.id === id) {\n                element[0] = content\n            }\n        // }\n        return element\n        })\n        console.log(newQuiz)\n        setquiz({name: quiz.name, content: newQuiz})\n    }\n    console.log(quiz)\n\n    const editA = (content, id) => {\n        // let i;\n        console.log(content)\n        const newQuiz = [...quiz.content].map(element => {\n            // for (i=0; i < element.length; i++){\n            if(element.id === id) {\n                element[1] = content\n            }\n        // }\n        return element\n        })\n        console.log(newQuiz)\n        setquiz({name: quiz.name, content: newQuiz})\n    }\n    console.log(quiz)\n\n    \n    const submitQuiz = () => {\n        props.submit(quiz)\n        props.history.push(\"/list\")\n    }\n\n    switch(step) {\n        case 1:\n            return (\n                <div className=\"quiz\" >\n                <div className=\"title\">Quiz name</div>\n                <input type=\"text\" value={quiz.name} onChange={(e) => setquiz({name: e.target.value, content: []})} autoFocus/>\n                <button type=\"button\" onClick={nextStep}>Next</button>\n                </div>\n            );\n        case 2: \n            return(     \n                <Add name={quiz.name} submit={updateQuiz} step={() => setStep(3)} />\n            );\n        case 3: \n            return( \n                <Show name={quiz.name} quiz={quiz.content} submit={submitQuiz} editQuestion={editQ} editAnswer={editA} />\n            );\n        case 4: \n            return( \n                <Edit name={quiz.name} quiz={quiz.content} step={() => setStep(3)} />\n            );\n        default: (console.log(\"This is build by switch statement\"))\n    }\n\n}\n\nexport default withRouter(Create);","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nfunction List(props) {\n    console.log(props.list)\n\n    const quizList = props.list.map(element => \n        <div key={element.id}>\n        <div className=\"list-name\">{element.name}</div>\n        <div className=\"list-button\">\n        <button type=\"button\" onClick={() => props.quiz(element.id)}><Link to=\"/list/quiz\">Start</Link></button>\n        <button type=\"button\" onClick={() => props.delete(element.id)}>Delete</button>\n        </div>\n        </div>\n     )\n         console.log(quizList)\n     return (\n     <div className=\"quiz\">{quizList}</div>\n     )\n\n}\n\nexport default List;","import React, {useState} from 'react';\n\nfunction Content(props) {\n    const [showHide, setShowHide] = useState(false)\n    const [step, setStep] = useState(1)\n    const [count, setCount] = useState(0)\n    const [point, setPoint] = useState(0)\n    console.log(props.content.length)\n\n    const winStep = () => {\n        if (count < props.content.length - 1) {\n            setCount(count + 1)\n            setPoint(point + 1)\n            setShowHide(!showHide)\n        }\n        else {\n            setPoint(point + 1)\n            setStep(2)}\n    }\n\n    const loseStep = () => {\n        if (count < props.content.length - 1) {\n            setCount(count + 1)\n            setPoint(point + 0)\n            setShowHide(!showHide)\n        }\n        else {\n            setPoint(point + 0)\n            setStep(2)}\n    }\n\n    const hideButton = {\n        display: \"none\"\n    }\n\n    const showButton = {\n        display: \"block\"\n    }\n    switch(step) {\n    case 1:\n        return (\n            <div className=\"quiz\">\n            <div className=\"title\">Quiz: {props.name}</div>\n                <div className=\"under-title\">\n                    <div>{count} of {props.content.length}</div>\n                    <div>{point}</div>\n                </div>\n\n                <div className=\"q-a\" key={props.content[count].id}>\n                    <div>Question:</div>\n                    <div>{props.content[count][0]}</div>\n                    <button style={showHide ? hideButton : null} type=\"button\" onClick={() => setShowHide(!showHide)}>Answer</button>\n                    \n                    <div style={showHide ? showButton : {display: \"none\"}}>\n                    <div>Answer:</div>\n                    <div>{props.content[count][1]}</div>                 \n                    <button type=\"button\" onClick={winStep}>O</button>\n                    <button type=\"button\" onClick={loseStep}>X</button>\n                    </div>\n                </div>\n            </div>\n            )\n\n    case 2:\n        return(\n            <h3 className=\"quiz\" style={{textAlign: \"center\"}}>You have won {point} points!</h3>\n        )\n    \n    default: (console.log(\"This is build by switch statement\"))\n    } \n\n}\n\nexport default Content;","import React, { useState } from 'react';\nimport './App.css';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport Create from './components/Create';\nimport List from './components/List';\nimport Content from './components/Content';\n\n\nfunction App() {\n  const [Quiz, setQuiz] =  useState([])\n  const [QuizContent, setQuizContent] = useState()\n\n  const quizList = (createQuiz) => {\n    createQuiz.id = Math.random()\n    const newQuiz = [...Quiz, createQuiz]\n    setQuiz(newQuiz)\n  }\n\n  const quizContent = (id) => {\n    setQuizContent()\n    const content = [...Quiz].filter(element =>\n      element.id === id\n      )\n      console.log(content)\n    setQuizContent(content[0])\n  }\n  console.log(QuizContent)\n  console.log(Quiz)\n\n  const deleteQuiz = (id) => {\n    const newQuizList = Quiz.filter(element => \n      element.id !== id\n      )\n      setQuiz(newQuizList)\n  } \n\n  return (\n    <BrowserRouter>\n      <Navbar />\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/create\" component={() => <Create submit={quizList} />} />\n      <Route exact path=\"/list\" component={() => <List list={Quiz} quiz={quizContent} delete={deleteQuiz} />} />\n      <Route exact path=\"/list/quiz\" component={() => <Content name={QuizContent.name} content={QuizContent.content} />} />\n    </BrowserRouter>\n  )\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}